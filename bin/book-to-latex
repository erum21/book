#!perl
use strict;
use warnings;

use feature ':5.10';
use Getopt::Long;

use lib 'lib';

use Pod::PseudoPod::LaTeX::Perl6book;
use Template;

my $size;

main();

sub main {
    GetOptions(

        # Should be one of: a4, letter.
        'size:s' => \$size,
    ) or die;
    build_latex_book();
}

sub build_latex_book {
        # We set these two dimensions the same for both A4 and letter
        # paper sizes, so that the page breaks occur at the same place
        # in both versions.
    my $textheight = 611;
    my $textwidth = 360;
        # This value is based on knowing the paper widths (A4: 595,
        # paper: 612) and the LaTeX \oddsidemargin for those paper
        # sizes.
    my $hoffset;
    if ($size eq 'a4') {
        $hoffset = ((595 - $textwidth) / 2) - 72 - 2;
    }
    elsif ($size eq 'letter') {
        $hoffset = ((612 - $textwidth) / 2) - 72 - 4;
    }
    else {
        die "Invalid 'size' option: '$size'. Should be 'a4' or 'letter'.";
    }
    my $page_dim = << "EOT";
    % We force these values to get the same page breaks in both
    % A4 and letter paper sizes.
\\textheight ${textheight}pt 
\\textwidth ${textwidth}pt
    % This value depends on the paper size.
\\hoffset ${hoffset}pt
EOT

    my $output;
    for (@ARGV) {
        my $parser = Pod::PseudoPod::LaTeX::Perl6book->new();
        $parser->codes_in_verbatim(1);
        $parser->output_string( \$output );
        $parser->parse_file($_);
    }

    my $tt = Template->new( { INCLUDE_PATH => 'src', } );

    $tt->process( 'latex.style', {
        content => $output,
        size => $size,
        page_dim => $page_dim,
    } );

} ## end sub build_latex_book
